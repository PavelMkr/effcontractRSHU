<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/materialize/1.0.0/js/materialize.min.js"></script>
<script>
    // Функция для отображения уведомлений
        function showNotification(message, isError = false) {
            var notification = $('#notification');
            notification.text(message);

            // Добавляем класс в зависимости от типа уведомления (ошибки или успеха)
            if (isError) {
                notification.addClass('error');
            } else {
                notification.removeClass('error');
            }

            // Плавно показываем и скрываем уведомление
            notification.fadeIn(500).delay(3000).fadeOut(500);
        }

    // Скрипт списка
        $(document).ready(function(){
            $('select').formSelect();
        });
</script>
<script>
        $(document).ready(function(){
            $(".search-input").on("keyup", function() {
                var value = $(this).val().toLowerCase();
                // Предполагаем, что у каждой таблицы есть класс 'searchable-table'
                $(".searchable-table tr").filter(function() {
                    $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1)
                });
            });
        });


</script>
{{!-- Скрипты страницы, если это декан и/или директор --}}
{{#if isDekaDir}}  
<script>
     // Скрипт загрузки файлов
    $(document).ready(function() {
        // Обработчик события клика на кнопку "Отправить"
        $('button[name="uploadBtn"]').click(function(event) {
            event.preventDefault(); // Предотвращаем стандартное поведение кнопки

            // Создаем объект FormData для всех файлов
            var formData = new FormData();

            // Цикл по каждому элементу с классом file-input
            $('.file-input').each(function() {
                var files = $(this)[0].files;

                // Добавляем файлы и информацию о них в formData
                for (var i = 0; i < files.length; i++) {
                    var file = files[i];
                    var index = $(this).data('index');
                    var idInput = $(this).data('id-input');
                    var idResult = $(this).data('result-id');
                    var count = $('#first' + idResult).val(); // Получаем значение поля ввода
                    var point = $('#result' + idResult).text(); // Получаем текстовое содержимое элемента
                    //console.log(
                    //    file, 
                    //    index, 
                    //    idInput, 
                    //    idResult,
                    //    count, 
                    //    point 
                    //);

                    formData.append('files[]', file);
                    formData.append('index[]', index);
                    formData.append('id_input[]', idInput);
                    formData.append('first[]', count);
                    formData.append('result[]', point);
                }
            });

            // Отправляем AJAX запрос на сервер
            $.ajax({
                url: '/upload',
                type: 'POST',
                data: formData,
                processData: false,
                contentType: false,
                success: function(response) {
                    // Отображаем уведомление на странице
                    showNotification(response.message);
                },
                error: function(xhr, status, error) {
                    // Отображаем уведомление о ошибке
                    showNotification('Ошибка загрузки файла: ' + error, true);
                    $('input[name="files[]"]').val(''); // Очистка инпутов
                }
            });
        });
    });

    // Сумма баллов
    function mult(second,first,result) {
        second.value = second
        var first = document.getElementById(first).value;
        document.getElementById(result).innerHTML = first * second;
    }

    function sumballAll() {
        var res ='result';
        let i = 1
        var names= [];
        while (i < 80) {
        name = res+i;
        var chislo = document.getElementById(name).textContent;
        names.push(chislo); 
        i++;
    }	
        var sum = 0
        for(var j = 0; j < names.length; j++){
        names[j]=Number(names[j])
        sum += names[j];
        }
        document.getElementById("result").innerText = sum;
    }
</script>
{{/if}}
{{#if isLowballPage}}
<script>
    // Скрипт загрузки файлов
    $(document).ready(function() {
        // Обработчик события клика на кнопку "Отправить"
        $('button[name="lowballUploadBtn"]').click(function(event) {
            event.preventDefault(); // Предотвращаем стандартное поведение кнопки

            // Создаем объект FormData для всех файлов
            var formData = new FormData();

            var id_ek = {{userIdEk}};
            formData.append('id_ek', id_ek);
            // Цикл по каждому элементу с классом file-input
            $('.file-input').each(function() {
                var files = $(this)[0].files;

                // Добавляем файлы и информацию о них в formData
                for (var i = 0; i < files.length; i++) {
                    var file = files[i];
                    var index = $(this).data('index');
                    var idInput = $(this).data('id-input');
                    var idResult = $(this).data('result-id');
                    var userId = $(this).data('user-id');
                    var point = $(this).data('point');

                    formData.append('files[]', file);
                    formData.append('index[]', index);
                    formData.append('id_result[]', idResult);
                    formData.append('id_input[]', idInput);
                    formData.append('result[]', point);
                }
            });

            // Отправляем AJAX запрос на сервер
            $.ajax({
                url: '/uploadLowball/'+ id_ek,
                type: 'POST',
                data: formData,
                processData: false,
                contentType: false,
                success: function(response) {
                    // Отображаем уведомление на странице
                    showNotification(response.message);
                },
                error: function(xhr, status, error) {
                    // Отображаем уведомление о ошибке
                    showNotification('Ошибка загрузки файла: ' + error, true);
                    $('input[name="files[]"]').val(''); // Очистка инпутов
                }
            });
        });
    });
</script>
{{/if}}
{{!-- Скрипты страницы, если это завкафедры --}}
{{#if isZavKaf}} 
<script>
     // Скрипт загрузки файлов
    $(document).ready(function() {
        // Обработчик события клика на кнопку "Отправить"
        $('button[name="uploadBtn"]').click(function(event) {
            event.preventDefault(); // Предотвращаем стандартное поведение кнопки

            // Создаем объект FormData для всех файлов
            var formData = new FormData();

            // Цикл по каждому элементу с классом file-input
            $('.file-input').each(function() {
                var files = $(this)[0].files;

                // Добавляем файлы и информацию о них в formData
                for (var i = 0; i < files.length; i++) {
                    var file = files[i];
                    var index = $(this).data('index');
                    var idInput = $(this).data('id-input');
                    var idResult = $(this).data('result-id');
                    var count = $('#first' + idResult).val(); // Получаем значение поля ввода
                    var point = $('#result' + idResult).text(); // Получаем текстовое содержимое элемента
                    //console.log(
                    //    file, 
                    //    index, 
                    //    idInput, 
                    //    idResult,
                    //    count, 
                    //    point 
                    //);

                    formData.append('files[]', file);
                    formData.append('index[]', index);
                    formData.append('id_input[]', idInput);
                    formData.append('first[]', count);
                    formData.append('result[]', point);
                }
            });

            // Отправляем AJAX запрос на сервер
            $.ajax({
                url: '/upload',
                type: 'POST',
                data: formData,
                processData: false,
                contentType: false,
                success: function(response) {
                    // Отображаем уведомление на странице
                    showNotification(response.message);
                },
                error: function(xhr, status, error) {
                    // Отображаем уведомление о ошибке
                    showNotification('Ошибка загрузки файла: ' + error, true);
                    $('input[name="files[]"]').val(''); // Очистка инпутов
                }
            });
        });
    });

    // Сумма баллов
    function mult(second,first,result) {
        second.value = second
        var first = document.getElementById(first).value;
        document.getElementById(result).innerHTML = first * second;
    }

    function sumballAll() {
        var res ='result';
        let i = 1
        var names= [];
        while (i < 80) {
        name = res+i;
        var chislo = document.getElementById(name).textContent;
        names.push(chislo); 
        i++;
    }	
        var sum = 0
        for(var j = 0; j < names.length; j++){
        names[j]=Number(names[j])
        sum += names[j];
        }
        document.getElementById("result").innerText = sum;
    }
</script>
    {{#if isRegisterPage}}
    <script>

        // Обработчик события отправки формы
        $(document).ready(function() {
            $('#registrationForm').submit(function(event) {
                event.preventDefault(); // Предотвратить отправку формы по умолчанию

                // Получение данных формы
                var formData = $(this).serialize();

                // Отправка данных на сервер
                $.ajax({
                    type: 'POST',
                    url: '/register',
                    data: formData,
                    success: function(response) {
                        // Показать уведомление об успешной регистрации
                        showNotification(response);
                    },
                    error: function(xhr, status, error) {
                        // Показать уведомление об ошибке регистрации
                        showNotification('Ошибка при регистрации пользователя', true);
                    }
                });
            });
        });
    </script>
    {{/if}}
{{/if}}
    
{{!-- Скрипты страницы, если это преподаватель  --}}
{{#if isPrepod}}
<script>
     // Скрипт загрузки файлов
    $(document).ready(function() {
        // Обработчик события клика на кнопку "Отправить"
        $('button[name="uploadBtn"]').click(function(event) {
            event.preventDefault(); // Предотвращаем стандартное поведение кнопки

            // Создаем объект FormData для всех файлов
            var formData = new FormData();

            // Цикл по каждому элементу с классом file-input
            $('.file-input').each(function() {
                var files = $(this)[0].files;

                // Добавляем файлы и информацию о них в formData
                for (var i = 0; i < files.length; i++) {
                    var file = files[i];
                    var index = $(this).data('index');
                    var idInput = $(this).data('id-input');
                    var idResult = $(this).data('result-id');
                    var count = $('#first' + idResult).val(); // Получаем значение поля ввода
                    var point = $('#result' + idResult).text(); // Получаем текстовое содержимое элемента
                    //console.log(
                    //    file, 
                    //    index, 
                    //    idInput, 
                    //    idResult,
                    //    count, 
                    //    point 
                    //);

                    formData.append('files[]', file);
                    formData.append('index[]', index);
                    formData.append('id_input[]', idInput);
                    formData.append('first[]', count);
                    formData.append('result[]', point);
                }
            });

            // Отправляем AJAX запрос на сервер
            $.ajax({
                url: '/upload',
                type: 'POST',
                data: formData,
                processData: false,
                contentType: false,
                success: function(response) {
                    // Отображаем уведомление на странице
                    showNotification(response.message);
                },
                error: function(xhr, status, error) {
                    // Отображаем уведомление о ошибке
                    showNotification('Ошибка загрузки файла: ' + error, true);
                    $('input[name="files[]"]').val(''); // Очистка инпутов
                }
            });
        });
    });

    // Сумма баллов
    function mult(second,first,result) {
        second.value = second
        var first = document.getElementById(first).value;
        document.getElementById(result).innerHTML = first * second;
    }

    function sumballAll() {
        var res ='result';
        let i = 1
        var names= [];
        while (i < 80) {
        name = res+i;
        var chislo = document.getElementById(name).textContent;
        names.push(chislo); 
        i++;
    }	
        var sum = 0
        for(var j = 0; j < names.length; j++){
        names[j]=Number(names[j])
        sum += names[j];
        }
        document.getElementById("result").innerText = sum;
    }
</script>
{{/if}}

{{!-- Скрипты страницы, если это админ --}}
{{#if isAdmin}}
<script src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.17.5/xlsx.full.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/handlebars.js/4.7.7/handlebars.min.js"></script>

    {{#if isUserEk}}
        <script>
            document.getElementById('confirmButton').addEventListener('click', async function() {
                var checkboxes = document.getElementsByName('confirmEK');
                var selectedIds = [];

                // Проверяем, какие checkbox'ы выбраны
                for (var i = 0; i < checkboxes.length; i++) {
                    if (checkboxes[i].checked) {
                        selectedIds.push(checkboxes[i].id.substring(7));
                    }
                }
                //console.log(selectedIds);
                //console.log(selectedIds.length);

                if (selectedIds.length == 0) {
                    showNotification('Выберите значение', true);
                    return;
                }

                try {
                    // Выполняем запрос к серверу для обновления данных в БД
                    const response = await fetch('/confirmDocuments', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify(selectedIds),
                    });
                    //console.log(JSON.stringify(selectedIds));

                    const data = await response.json();

                    if (data.success) {
                        showNotification('Данные успешно обновлены');
                    } else {
                        showNotification(data.message, true);
                    }
                } catch (error) {
                    console.error('Ошибка при выполнении запроса:', error);
                    showNotification('Произошла ошибка', true);
                }
            });

            function sortTable(n) {
                var table, rows, switching, i, x, y, shouldSwitch, dir, switchcount = 0;
                table = document.getElementById("userDocs");
                switching = true;
                // Установка порядка сортировки в прямой
                dir = "asc";
                /* Сделать цикл, который будет продолжаться до тех пор, пока не будет произведена сортировка */
                while (switching) {
                    switching = false;
                    rows = table.rows;
                    /* Проход по всем строкам кроме заголовков */
                    for (i = 1; i < (length - 1); i++) {
                        shouldSwitch = false;
                        /* Получение элементов для сравнения один за другим */
                        x = rows[i].getElementsByTagName("td")[n];
                        y = rows[i + 1].getElementsByTagName("td")[n];
                        /* Проверка нужно ли поменять местами */
                        if (dir === "asc") {
                            if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {
                                // Если нужно поменять местами, поменять флаг и выйти из цикла
                                shouldSwitch = true;
                                break;
                            }
                        } else if (dir === "desc") {
                            if (x.innerHTML.toLowerCase() < y.innerHTML.toLowerCase()) {
                                // Если нужно поменять местами, поменять флаг и выйти из цикла
                                shouldSwitch = true;
                                break;
                            }
                        }
                    }
                    if (shouldSwitch) {
                        /* Если флаг был установлен, выполнить обмен строк и пометить, что обмен был выполнен */
                        rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
                        switching = true;
                        // Увеличение счетчика обмена
                        switchcount++;
                    } else {
                        /* Если обмен не был выполнен и порядок сортировки - прямой, установить порядок обратно и перейти к следующему столбцу */
                        if (switchcount === 0 && dir === "asc") {
                            dir = "desc";
                            switching = true;
                        }
                    }
                }
            };
        </script>
    {{/if}}

    {{#if isSummTable}}
        <script>
            $(document).ready(function() {
                // Устанавливаем обработчик события на кнопку "Создать"
                $('#createForm').on('submit', function(e) {
                    createTable(); // Вызываем функцию для создания таблицы
                });
            });

            function createTable() {
                // Получаем значения из формы
                const department = $('select[name="department"]').val();
                const position = $('select[name="position"]').val();

                // Отправляем AJAX запрос на сервер
                $.ajax({
                    url: '/createTable',
                    method: 'GET',
                    data: { department, position },
                    success: function(response) {
                        createTableWithJQuery(response);
                    },
                    error: function(error) {
                        console.error('Error:', error);
                    }
                });
            }

            function createTableWithJQuery(response) {
                // Проверяем, есть ли данные в ответе
                if (response && response.length > 0) {
                    var tableHtml = '<div class="content"><table class="striped centered highlight searchable-table"><thead><tr><th>ФИО</th><th>Должность</th><th>Кафедра</th><th>Количество баллов</th></tr></thead><tbody><button class="waves-effect waves-light btn red" type="button" onclick="downloadTable()">Скачать таблицу</button></div>';

                    response.forEach(function(rowData) {
                        tableHtml += '<tr><td>' + rowData.last_name + ' ' + rowData.name_real + ' ' + rowData.patronymic + '</td><td>' + rowData.position + '</td><td>' + rowData.department + '</td><td>' + rowData.userScore +'</td></tr>';
                    });

                    tableHtml += '</tbody></table>';
                    $('#table-response').html(tableHtml);
                } else {
                    // Если данных нет, выводим сообщение
                    $('#table-response').html('<h3>Значений не найдено</h3>');
                }
            }

            function downloadTable() {
                console.log('Скачать таблицу')
            }
        </script>

    {{/if}}
{{/if}}